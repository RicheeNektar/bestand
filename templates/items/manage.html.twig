{% extends 'base.html.twig' %}

{% block body %}
    <datalist id="categories">
        {% for category in categories %}
            <option value="{{ category.name }}"></option>
        {% endfor %}
    </datalist>
    <datalist id="retailers">
        {% for retailer in retailers %}
            <option value="{{ retailer.name }}"></option>
        {% endfor %}
    </datalist>
    <datalist id="sizes">
        {% for size in sizes %}
            <option value="{{ size.name }}"></option>
        {% endfor %}
    </datalist>

    {% include 'items/manage/template.html.twig' %}

    <div class="p-2 sticky-top bg-body-tertiary">
        <div class="btn-group">
            <button class="btn btn-primary" onclick="document.getElementById('manage').submit()">
                <i class="bi bi-floppy2"></i>
            </button>
            <button class="btn btn-secondary" onclick="addItemToList()">
                <i class="bi bi-bag-plus"></i>
            </button>
        </div>
    </div>

    <form id="manage" method="post" enctype="multipart/form-data">
        <ul class="list-group" id="list">
            {% for item in items %}
                {% include 'items/manage/item.html.twig' with {item:item} %}
            {% endfor %}
        </ul>
    </form>

    <script>
        const template = document.getElementById('row');
        const list = document.getElementById('list');
        const toggledAttrib = 'x-editing';

        {% verbatim %}
        function edit(bt) {
            const btP = bt.parentNode.parentNode;

            const editing = 'true' !== btP.getAttribute(toggledAttrib);
            btP.setAttribute(toggledAttrib, editing);
            btP.querySelectorAll('button[x-type="edit"]').forEach(b => b.classList[editing ? 'add' : 'remove']('active'));

            const p = btP.parentNode;
            p.querySelectorAll('input').forEach(i => i.disabled = !editing || i.name.includes('delete'));
            const img = p.querySelector('img');
            img.classList[editing ? 'add' : 'remove']('d-none');
            img.parentNode.querySelector('button').classList[editing ? 'remove' : 'add']('d-none');
        }

        function addItemToList() {
            const id = `tmp-${new Date().getTime()}`;
            const t = template.content.cloneNode(true);
            t.querySelectorAll('input').forEach(input => input.name = input.name.replace(/(\w+)\[\]/, `$1[${id}]`));
            t.querySelectorAll('select').forEach(input => input.name = input.name.replace(/(\w+)\[\]/, `$1[${id}]`));
            list.prepend(t);
        }

        function prepareRemoval(bt) {
            const deleteInput = bt.querySelector('input');
            if (deleteInput.name.match(/\[tmp-\d+\]/)) {
                bt.parentNode.parentNode.parentNode.remove();
            } else {
                bt.parentNode.parentNode.parentNode.style.display = 'none';
                deleteInput.disabled = false;
            }
        }
        {% endverbatim %}
    </script>
{% endblock %}